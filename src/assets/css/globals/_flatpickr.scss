/*
* Flatpickr Style Overwrites
*/
.flatpickr-calendar {
  padding: pxToRem($sizeTiny) pxToRem($sizeSmallRegular) pxToRem($sizeRegular);
  border-radius: 1px;
  box-shadow: 0 0 16px rgba(0, 0, 0, 0.16), 0 0 2px rgba(0, 0, 0, 0.32);

  // Weekdays labels
  .flatpickr-weekday {
    color: $colorBlack60;
    width: pxToRem($sizeSmallHuge);
    height: pxToRem($sizeSmallLarge);
    font-size: pxToRem($sizeFontSmall);
    line-height: $sizeLineHeightBigger;
    font-weight: $fontWeightDefault;
    max-width: pxToRem($sizeSmallHuge);
    margin: 0 2px;
  }
}

.flatpickr-calendar.open {
  width: 100%;
  max-width: 376px;
  max-height: 394px; //old wrong value from design = 364px;

  &.noCalendar {
    max-height: pxToRem($sizeSmallHuge);
    padding: 0;
  }

  &.hasTime {
    max-height: 458px; //old wrong value from design = 428px

    // CALENDER AND TIME TOGETHER
    &.showTimeInput .flatpickr-time {
      border-top: 1px solid rgba(0, 0, 0, 0.2);
    }

    .flatpickr-time {
      height: pxToRem($sizeSmallHuge);
      max-height: pxToRem($sizeSmallHuge);
    }
  }
}

.flatpickr-rContainer,
.flatpickr-days,
.dayContainer {
  width: 100%;
  max-width: 100%;
}

/*
* HOURS/MINUTES & CONTROL ARROWS(UP/DOWN)
*/
.flatpickr-time {
  display: block;
  height: pxToRem($sizeSmallHuge);
}

.numInputWrapper {
  height: 100%;
  min-width: 74px;

  &:hover {
    input,
    .arrowDown,
    .arrowUp {
      background: $colorBlack5;
    }
  }

  input {
    font-size: pxToRem($sizeFontRegular);
    line-height: $sizeLineHeightBase;
    background-color: $colorWhite;
    font-weight: $fontWeightDefault;
    height: 100%;

    &:hover,
    &:focus {
      background: $colorBlack5;
    }
  }

  input,
  .arrowDown,
  .arrowUp {
    cursor: pointer;
  }

  .arrowDown,
  .arrowUp {
    border: none;

    &:after {
      border-left: 5px solid transparent;
      border-right: 5px solid transparent;
    }
  }

  .arrowDown:after {
    border-top: 5px solid $colorBlack60;
  }

  .arrowUp:after {
    border-bottom: 5px solid $colorBlack60;
  }
}
// TIME ONLY
.flatpickr-time .numInputWrapper {
  height: 100%;
}

/*
* MONTH/YEAR & CONTROL ARROWS(LEFT/RIGHT)
*/
.flatpickr-months {
  height: pxToRem($sizeSmallHuge);
  position: relative;
  width: 248px;
  margin: 0 auto;
  align-items: center;

  .flatpickr-current-month,
  .flatpickr-month {
    height: 100%;
  }

  .flatpickr-current-month {
    padding-top: 0;
    display: flex;
    margin: 0 auto;
  }

  .flatpickr-monthDropdown-months {
    // -moz-appearance: none;
    // -webkit-appearance: none;
    appearance: none;
    border: none;
    height: 100%;
    line-height: pxToRem($sizeSmallHuge);
    flex-grow: 1;
    margin: 0;
    padding: 0;

    &:-moz-focusring {
      color: transparent;
      text-shadow: 0 0 0 $colorBlack;
    }
  }

  // Year input
  .numInputWrapper {
    height: 100%;
    display: inline-flex;
    width: pxToRem(74px);
    max-width: pxToRem(74px);
  }

  .flatpickr-monthDropdown-months,
  .numInput.cur-year {
    font-weight: $fontWeightBlack;
  }

  .numInput.cur-year {
    margin-right: pxToRem(14px);
  }

  .flatpickr-next-month,
  .flatpickr-prev-month {
    height: 100%;
    padding: pxToRem($sizeSmallRegular);

    &:hover svg,
    svg {
      width: pxToRem($sizeLarge);
      height: pxToRem($sizeLarge);
      fill: $colorBlack60;
    }
  }

  .flatpickr-next-month.flatpickr-next-month {
    right: pxToRem(-$sizeSmallHuge);
  }

  .flatpickr-prev-month.flatpickr-prev-month {
    left: pxToRem(-$sizeSmallHuge);
  }
}

/*
* DAYS CELLS
*/
.flatpickr-day {
  border-radius: 1px;
  font-size: pxToRem($sizeFontRegular);
  line-height: $sizeLineHeightBase;
  max-width: pxToRem($sizeSmallHuge);
  height: pxToRem($sizeSmallHuge);
  display: flex;
  align-items: center;
  color: $colorBlack60;

  &.today {
    border: 2px solid $colorBlack5;
  }

  &.prevMonthDay,
  &.nextMonthDay {
    color: $colorBlack20;
  }

  &.selected {
    border-color: $colorCyan;
    background: $colorCyan;
    color: $colorBlack;

    &.startRange,
    &.endRange {
      border-radius: 1px;
    }
  }

  &.startRange.startRange {
    border-radius: 1px;
  }

  &.inRange {
    background-color: $colorBlack5;
    box-shadow: none;
    border-color: $colorBlack5;
    color: $colorBlack60;
  }

  &.endRange.endRange {
    border-radius: 1px;
    background-color: $colorBlack10;
    border-color: $colorBlack10;
    color: $colorBlack;
  }
}
