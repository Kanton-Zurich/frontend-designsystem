$borderWidth: 2px;
$borderWidthRem: pxToRem($borderWidth);
$targetInputHeight: 72px  - $borderWidth * 2;
$paddingInput: (pxToRem($targetInputHeight) - (pxToRem($sizeFontRegular) * $sizeLineHeightBase)) / 2;

// VARIABLES FOR SMALL
$targetSmallInputHeight: 48px - $borderWidth * 2;
$paddingSmallInput: (pxToRem($targetSmallInputHeight) - (pxToRem($sizeFontRegular) * $sizeLineHeightBase)) / 2;

// VARIABLES FOR FLOATED
$paddingDifferenceOnFocus: pxToRem(10px);

// VARIABLES FOR SEARCH
$searchSizeCurve: (
  font: (
    tiny: $sizeFontBiggerRegular,
    large: $sizeFontBig,
  ),
  padding: (
    tiny: ($targetSmallInputHeight - ($sizeFontBiggerRegular * $sizeLineHeightBase)) / 2,
    large: ($targetInputHeight - ($sizeFontBig * $sizeLineHeightBase)) / 2,
  )
);

.atm-form_input {
  position: relative;
  display: flex;
  flex-direction: column;

  &__input {
    font-size: pxToRem($sizeFontRegular);
    line-height: $sizeLineHeightBase;

    padding: $paddingInput pxToRem($sizeRegular);

    display: block;
    width: 100%;

    border: $borderWidth solid $colorBlack40;
    border-radius: 2px;
    order: 1;

    &:focus {
      outline: none;
      border-color: $colorCyan;
    }

    &:-ms-input-placeholder {
      color: $colorBlack60;
    }

    &::placeholder {
      color: $colorBlack60;
    }

    /* --- DISABLED --- */
    &:disabled,
    &[ disabled ] {
      background: $colorWhite;
      border-color: $colorBlack20;
      color: $colorBlack20;

      &:-ms-input-placeholder {
        color: $colorBlack20;
      }

      &::placeholder {
        color: $colorBlack20;
      }
    }
  }

  label {
    color: $colorBlack60;
  }

  /* --------------------
  ------ TEXTAREA -------
  --------------------- */
  .atm-form_input__input--txtarea {
    min-height: pxToRem(112px);
  }

  /* --------------------
  ---- W/O FLOATING -----
  --------------------- */

  &:not(.atm-form_input--floated) {
    label {
      @include visuallyhidden;
    }
  }

  /* --------------------
  ----- W FLOATING ------
  --------------------- */

  &--floated {
    .atm-form_input__input {
      &:-ms-input-placeholder {
        color: transparent;
      }

      &::placeholder {
        color: transparent;
      }
    }

    label {
      position: absolute;
      top: $paddingInput + $borderWidthRem;
      left: pxToRem($sizeRegular) + $borderWidthRem;

      right: $borderWidth;
      background: $colorWhite;

      @include transition(top);
    }

    /* ----- INPUT ON FOCUS/DIRTY ----- */
    .atm-form_input__input:focus,
    .atm-form_input__input.dirty {
      padding-top: $paddingInput + $paddingDifferenceOnFocus;
      padding-bottom: $paddingInput - $paddingDifferenceOnFocus;
    }

    /* ----- LABEL ON FOCUS/DIRTY ------ */
    .atm-form_input__input:focus ~ label,
    .atm-form_input__input.dirty ~ label {
      top: pxToRem(14px);
      transform: translateY(0);

      font-size: $sizeFontTiny;

      font-family: $fontFamilyBlack;
      color: $colorBlack;
    }

    /* ---- DEC. ICON ON FOCUS/DIRTY ----- */
    .atm-form_input__input:focus ~ svg.icon,
    .atm-form_input__input.dirty ~ svg.icon {
      top: $paddingInput + $paddingDifferenceOnFocus + $borderWidthRem;
    }
  }

  /* ------------------------------
  ----- ICON AND FUNCTIONALITY ----
  ------------------------------- */
  &__validate-icon,
  &__functionality {
    position: absolute;
    top: $paddingInput + $borderWidthRem;
    right: pxToRem($sizeRegular);

    span {
      line-height: 0;
      display: none;
    }
  }

  &__functionality {
    display: none;

    svg use {
      fill: $colorBlack60;
    }

    &:hover svg use {
      fill: $colorBlack;
    }
  }

  &__input.dirty ~ &__functionality {
    display: block;
  }

  /* --- DECORATIVE ICON --- */
  &--icon {
    .atm-form_input__input {
      padding-left: (pxToRem($sizeRegular) * 1.5) + pxToRem(24);
    }

    label {
      left: (pxToRem($sizeRegular) * 1.5) + pxToRem(24);
    }

    > .icon {
      position: absolute;
      left: pxToRem($sizeRegular);

      top: $paddingInput + $borderWidthRem;

      @include transition(top);
    }
  }

  /* ------------------
  -------- UNIT -------
  ------------------ */

  &__unit {
    position: absolute;
    color: $colorBlack60;

    top: $paddingInput + $borderWidthRem;

    &--right {
      right: pxToRem($sizeRegular) + $borderWidthRem;
    }
  }

  // When the input gets validation the unit right needs more spacing
  &__input[ data-validation ] ~ &__unit--right {
    right: pxToRem($sizeRegular * 1.5) + $borderWidthRem + pxToRem(24);
  }

  &--unitLeft {
    .atm-form_input__unit {
      left: pxToRem($sizeRegular);
    }
  }

  /* ------------------
  ------ SMALL --------
  ------------------ */

  &--small {
    .atm-form_input__input {
      padding-top: $paddingSmallInput;
      padding-bottom: $paddingSmallInput;
    }

    .atm-form_input__validate-icon,
    .atm-form_input__functionality {
      top: $paddingSmallInput + $borderWidthRem;
    }

    > .icon {
      top: $paddingSmallInput + $borderWidthRem;
    }
  }

  /* ------------------
  -- VALIDATION MSG ---
  ------------------ */
  p {
    transform: scaleY(0) translateY(-100%);
    margin: 0;
    padding: pxToRem($sizeMini) pxToRem($sizeRegular);
    font-size: $sizeFontTiny;
    line-height: 1.5;
    background: $colorRed;
    color: $colorWhite;

    order: 3;

    border-bottom-left-radius: 2px;
    border-bottom-right-radius: 2px;

    @include transition(transform);

    &.show {
      transform: scaleY(1) translateY(0);
      order: 2;
    }
  }

  /* ------------------
  ----- VALIDATION ----
  ------------------ */
  &.invalid {
    .atm-form_input__input {
      border-color: $colorRed;
      border-bottom-left-radius: 0;
      border-bottom-right-radius: 0;
    }

    .atm-form_input__validate-icon {
      span:last-child {
        display: block;
      }

      svg use {
        fill: $colorRed;
      }
    }
  }

  &.valid {
    .atm-form_input__validate-icon {
      span:first-child {
        display: block;
      }

      svg use {
        fill: $colorGreen;
      }
    }
  }

  /* ----------------
  ----- SUCHE -------
  ----------------- */

  &--search {
    .atm-form_input__input {
      font-family: $fontFamilyBlack;

      @include sizeCurve(font-size, font, $searchSizeCurve);
      @include sizeCurve(padding-top padding-bottom, padding, $searchSizeCurve);
    }
  }
}
