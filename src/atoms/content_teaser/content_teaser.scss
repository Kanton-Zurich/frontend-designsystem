.atm-content_teaser {
  display: block;

  padding: pxToRem($sizeRegular) 0;
  box-sizing: border-box;

  line-height: $sizeLineHeightBigger;
  position: relative;
  cursor: pointer;
  color: $colorBlack60;
  text-decoration: none;

  &:after {
    content: '';
    display: block;

    @include transition(all);

    position: absolute;
    left: 0;
    right: 0;
    bottom: 0;

    height: 1px;
    background-color: $colorBlack20;
    transform: scaleY(1);
  }

  &:hover {
    color: $colorBlack100;

    .atm-content_teaser__title {
      color: $colorBlack100 !important; // stylelint-disable-line
    }

    &:after {
      background-color: $colorBlack100;
      transform: scaleY(3);
    }
  }

  &__title {
    font-weight: $fontWeightBlack;
  }

  &__content {
    @include polyFluidSizing(font-size, map-get($fontSizeCurves, regular));
    // 4.2 because of line height 1.4 multiply with max 3 lines (1.4 * 3)
    @include polyFluidSizing(max-height, multiplyMapValues(map-get($fontSizeCurves, regular), 4.2));

    overflow-y: hidden;
    display: block;

    @include mq($to: medium) {
      // 2.8 because of line height 1.4 multiplied with max 2 lines (1.4 * 2)
      @include polyFluidSizing(max-height, multiplyMapValues(map-get($fontSizeCurves, regular), 2.8));
    }
  }
}

@each $key, $val in $tl-color-variations {
  .#{$key} {
    .atm-content_teaser {
      &__title {
        color: $val;
      }
    }
  }
}
