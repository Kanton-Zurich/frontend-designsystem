$headingCurves: (
  borderedTopPadding: (
    tiny: $sizeSmallRegular,
    large: $sizeRegular,
  ),
  borderedTopMargin: (
    tiny: $sizeHuge,
    large: $sizeGiant,
  ),
);

.atm-heading {
  line-height: $sizeLineHeightNarrow;
  font-family: $fontFamilyBlack;
  font-weight: $fontWeightDefault;
  margin-top: 0;
  hyphens: auto;

  &--cv-inverted,
  [ class*='--cv-inverted' ] & {
    color: $colorWhite;

    &.atm-heading--bordered:before {
      background: $colorWhite;
    }
  }

  &--bordered {
    position: relative;

    &:before {
      content: ' ';
      height: pxToRem(3px);
      display: block;
      position: absolute;

      background: $colorBlack;
      width: 100vw;
      left: 0;
      top: 0;
    }
  }
}

h1,
.h1 {
  &.atm-heading {
    @include polyFluidSizing('font-size', map-get($fontSizeCurves, huge));
    @include sizeCurve('margin-bottom', medium);
    @include mq($from: medium) {
      line-height: $sizeLineHeightNarrower;
    }
  }
}

h2,
.h2 {
  &.atm-heading {
    @include polyFluidSizing('font-size', map-get($fontSizeCurves, big));
    @include sizeCurve('padding-top', regular);
    @include sizeCurve('margin-bottom', regular);
    @include mq($to: small) {
      line-height: $sizeLineHeightMedium;
    }
    @include mq($from: xlarge) {
      line-height: $sizeLineHeightNarrower;
    }

    &.atm-heading--bordered {
      @include sizeCurve(padding-top, borderedTopPadding, $headingCurves);
      @include sizeCurve(margin-top, borderedTopMargin, $headingCurves);
      @include headingFullWidth();
    }
  }
}

h3,
.h3 {
  &.atm-heading {
    line-height: $sizeLineHeightMedium;

    @include polyFluidSizing('font-size', map-get($fontSizeCurves, medium));
    @include sizeCurve('padding-top', small);
    @include sizeCurve('margin-bottom', mini);
    @include mq($from: xlarge) {
      line-height: $sizeLineHeightNarrow;
    }
  }
}

h4,
h5,
h6,
.h4,
.h5,
.h6 {
  &.atm-heading {
    line-height: $sizeLineHeightMedium;
    margin-bottom: 0;

    @include polyFluidSizing('font-size', map-get($fontSizeCurves, regular));
    @include mq($to: xsmall) {
      line-height: $sizeLineHeightBase;
    }

    &--bordered {
      @include sizeCurve('padding-top', small);
    }
  }
}

