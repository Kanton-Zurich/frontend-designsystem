$headingCurves: (
  borderedTopPadding: (
    tiny: $sizeSmallRegular,
    large: $sizeRegular,
  ),
  borderedTopMargin: (
    tiny: $sizeHuge,
    large: $sizeGiant,
  ),
);

.atm-heading {
  line-height: $sizeLineHeightNarrow;
  font-family: $fontFamilyBlack;
  margin-top: 0;
  hyphens: auto;
  color: var(--color-text);

  &--bordered {
    position: relative;

    &:before {
      content: ' ';
      height: pxToRem(3px);
      display: block;
      position: absolute;

      background: var(--color-text);
      width: 100vw;
      left: 0;
      top: 0;
    }
  }

  &--lex-detail {
    margin-top: -2px;
    margin-bottom: pxToRem($sizeBig) !important; //stylelint-disable-line
    padding-top: 0;

    @include mq($to: small) {
      clear: both;
    }
  }

  // Number-Prefix-Heading (CZHDEV-3010)
  &--number-prefix {
    display: flex;

    .atm-heading__prefix {
      @include sizeCurve(padding-right, atomic);
      min-width: pxToRem($chapterNumberMinWidth);
    }
  }
}

h1,
.h1 {
  &.atm-heading {
    letter-spacing: -0.02em;

    @include polyFluidSizing('font-size', map-get($fontSizeCurves, huge));
    @include sizeCurve(margin-bottom, medium);
    @include mq($from: medium) {
      line-height: $sizeLineHeightNarrower;
    }
  }
}

@mixin h2__atm-heading {
  letter-spacing: -0.02em;

  @include polyFluidSizing('font-size', map-get($fontSizeCurves, big));
  @include sizeCurve('padding-top', regular);
  @include sizeCurve('margin-bottom', regular);
  @include mq($to: small) {
    line-height: $sizeLineHeightMedium;
  }
  @include mq($from: xlarge) {
    line-height: $sizeLineHeightNarrower;
  }

  &.atm-heading--bordered {
    @include sizeCurve(padding-top, borderedTopPadding, $headingCurves);
    @include sizeCurve(margin-top, borderedTopMargin, $headingCurves);
  }
}
@mixin h2__atm-heading--smaller {
  line-height: $sizeLineHeightMedium;

  @include polyFluidSizing('font-size', map-get($fontSizeCurves, medium));
  @include sizeCurve('padding-top', small);
  @include sizeCurve('margin-bottom', mini);
  @include mq($from: xlarge) {
    line-height: $sizeLineHeightNarrow;
  }
}
@mixin h4__atm-heading {
  line-height: $sizeLineHeightMedium;

  @include polyFluidSizing('font-size', map-get($fontSizeCurves, regular));
  @include mq($to: xsmall) {
    line-height: $sizeLineHeightBase;
  }
}

h2,
.h2 {
  &.atm-heading {
    @include h2__atm-heading;
  }
}

h3,
.h3 {
  &.atm-heading {
    line-height: $sizeLineHeightMedium;
    letter-spacing: normal;

    @include polyFluidSizing('font-size', map-get($fontSizeCurves, medium));
    @include sizeCurve('padding-top', small);
    @include sizeCurve('margin-bottom', mini);
    @include mq($from: xlarge) {
      line-height: $sizeLineHeightNarrow;
    }

    &.atm-heading--bordered {
      @include sizeCurve(padding-top, borderedTopPadding, $headingCurves);
      @include sizeCurve(margin-top, borderedTopMargin, $headingCurves);
    }
  }
}

h4,
h5,
h6,
.h4,
.h5,
.h6 {
  // Number-Prefix-Heading (CZHDEV-3010)
  &.atm-heading--number-prefix {
    font-family: $fontFamilyBase;
  }

  &.atm-heading {
    line-height: $sizeLineHeightMedium;
    margin-bottom: 0;

    @include polyFluidSizing('font-size', map-get($fontSizeCurves, regular));
    @include mq($to: xsmall) {
      line-height: $sizeLineHeightBase;
    }

    &--bordered {
      @include sizeCurve('padding-top', small);
      @include sizeCurve('margin-top', medium);
    }
  }
}

h1,
h2,
h3,
h4,
h5,
h6 {
  &.atm-heading--with-lead {
    padding-top: 0;
    color: var(--color-accent);

    @include sizeCurve(margin-bottom, big);
    @include polyFluidSizing('font-size', map-get($fontSizeCurves, medium));
  }
}

p.atm-heading__lead {
  line-height: $sizeLineHeightBase;
  color: var(--color-text-soft);
  margin-bottom: 0;

  @include sizeCurve(margin-top, big);
  @include polyFluidSizing('font-size', map-get($fontSizeCurves, regular));
}

.mod-smaller-headings {
  h1,
  .h1 {
    &.atm-heading:not(.atm-heading--bordered) {
      @include polyFluidSizing('font-size', map-get($fontSizeCurves, big));
      @include sizeCurve('padding-top', regular);
      @include sizeCurve('margin-bottom', regular);
      @include mq($to: small) {
        line-height: $sizeLineHeightMedium;
      }
      @include mq($from: xlarge) {
        line-height: $sizeLineHeightNarrower;
      }
    }
  }

  h2,
  .h2 {
    &.atm-heading:not(.atm-heading--no-smaller-headings) {
      @include h2__atm-heading--smaller;

      padding-top: 0 !important; // stylelint-disable-line

      &:before {
        display: none;
      }
    }
  }

  h3,
  .h3 {
    &.atm-heading {
      line-height: $sizeLineHeightMedium;
      margin-bottom: 0;
      padding-top: 0;

      @include polyFluidSizing('font-size', map-get($fontSizeCurves, regular));
      @include mq($to: xsmall) {
        line-height: $sizeLineHeightBase;
      }
    }
  }

  h4,
  .h4 {
    &.atm-heading {
      line-height: $sizeLineHeightBase;
      font-family: $fontFamilyBase;

      @include mq($from: xsmall) {
        line-height: $sizeLineHeightBigger;
      }
      @include mq($from: xlarge) {
        line-height: $sizeLineHeightBase;
      }
    }
  }

  h5.atm-heading,
  h6.atm-heading,
  .h5.atm-heading,
  .h6.atm-heading {
    @include polyFluidSizing(font-size, map-get($fontSizeCurves, smallModFontSizeH5H6));
    line-height: $sizeLineHeightBigger;

    @include mq($from: medium) {
      line-height: $sizeLineHeightBase;
    }
    @include mq($from: medium) {
      line-height: $sizeLineHeightMedium;
    }
  }
}
