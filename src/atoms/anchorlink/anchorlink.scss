.atm-anchorlink {
  position: relative;
  text-decoration: none;
  display: inline-flex;
  align-items: center;

  $anchorlinkSizeCurves: (
    maxWidth: (
      tiny: 296px,
      xsmall: 368px,
      small: 443px,
      medium: 576px,
      large: 622px,
      xlarge: 768px,
    ),
  );

  /*
  * Regular Anchorlink Style
  */
  &:not(.atm-anchorlink--tag) {
    height: pxToRem($sizeBiggerBig + $sizeTiny);
    margin: 0 pxToRem($sizeTiny);
    font-family: $fontFamilyBase;
    color: $colorBlack;
    font-size: pxToRem($sizeFontSmall);
    line-height: $sizeLineHeightBase;

    &:first-of-type {
      margin-left: pxToRem($sizeSmallRegular);
    }

    &:after {
      content: '';
      position: absolute;
      left: 50%;
      bottom: -1px;
      transform: translateX(-50%) scaleX(0);
      width: 100%;
      height: 2px;
      background-color: $colorBlack;
    }

    &.atm-anchorlink--active {
      font-family: $fontFamilyBlack;

      &:after {
        transform: translateX(-50%) scaleX(1);
      }
    }

    &:hover {
      cursor: pointer;

      &:not(:active):not(.atm-anchorlink--active) {
        color: rgba($colorBlack, 0.6);
      }
    }

    @include mq($from: xsmall) {
      font-size: pxToRem($sizeFontRegular);
      line-height: $sizeLineHeightBase;
      height: pxToRem($sizeHuge);
    }
  }

  /*
  * Tag Style
  */
  &--tag {
    color: rgba($colorBlack, 0.6);
    border-radius: 75.5px;
    padding: 0 pxToRem($sizeRegular);
    background: $colorBlack10;
    height: pxToRem($sizeBiggerBig);
    max-width: 100%;

    &:hover {
      color: $colorBlack;
      background: rgba($colorBlack, 0.15);
    }

    &:active,
    &.atm-anchorlink--active {
      background-color: $colorBlack;
      color: $colorWhite;

      &:hover {
        background-color: rgba($colorBlack, 0.8);
      }
    }

    // Active and inverted but not topic.
    &.atm-anchorlink--inverted.atm-anchorlink--active:not(.atm-anchorlink--tag-topic) {
      background: $colorWhite;
      color: $colorBlack;

      &:hover {
        background: rgba($colorWhite, 0.7);
      }
    }

    // The rest.
    &.atm-anchorlink--inverted:not(.atm-anchorlink--active) {
      background: rgba($colorBlack, 0.2);
      color: $colorWhite;

      &:hover {
        background: rgba($colorBlack, 0.4);
      }
    }

    /*
    * Style Topic Variante
    */
    &-topic {
      font-size: pxToRem($sizeFontTiny);
      line-height: $sizeLineHeightBase;
      padding: 0 pxToRem($sizeTiny);
      height: pxToRem($sizeLarge);
    }

    /*
    * Style Topitem Variante
    */
    &-top {
      font-family: $fontFamilyBlack;
      font-size: pxToRem($sizeFontLarge);
      line-height: $sizeBiggerBig;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;

      @include sizeCurve(max-width, maxWidth, $anchorlinkSizeCurves);

      display: inline-block;
      padding: 0 pxToRem($sizeSmallRegular);
      height: pxToRem($sizeBiggerBig);

      @include mq($to: small) {
        max-width: 100%;
      }

      &-small {
        font-size: pxToRem($sizeFontBiggerRegular);
        line-height: $sizeBiggerBig;
        padding: 0 pxToRem($sizeSmallRegular);
        height: pxToRem($sizeBiggerBig);
      }
    }
  }
}
