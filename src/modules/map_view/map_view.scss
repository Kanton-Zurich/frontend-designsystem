$mapViewMarkerWidth: 30px;
$mapViewMarkerHeight: 38px;

.mdl-map_view {
  height: 100%;
  width: 100%;
  position: relative;

  &__container {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }

  &__marker {
    &:after {
      content: '';
      position: absolute;
      height: pxToRem($mapViewMarkerHeight);
      width: pxToRem($mapViewMarkerWidth);
      left: pxToRem(-$mapViewMarkerWidth / 2);
      bottom: 0;
      background-size: contain;
      background-position: center;
      background-repeat: no-repeat;
    }
  }

  $userPosMarkerOuterW: $sizeBig;
  $userPosMarkerInnerW: $sizeRegular;
  $userPosMarkerInnerRing: 1px;

  &__userposition {
    &:before {
      content: '';
      position: absolute;
      height: pxToRem($userPosMarkerOuterW);
      width: pxToRem($userPosMarkerOuterW);
      left: pxToRem(-$userPosMarkerOuterW / 2);
      top: pxToRem(-$userPosMarkerOuterW / 2);
      background-color: rgba($colorCyan, 0.25);
      border-radius: 50%;
    }

    &:after {
      content: '';
      position: absolute;
      height: pxToRem($userPosMarkerInnerW - $userPosMarkerInnerRing);
      width: pxToRem($userPosMarkerInnerW - $userPosMarkerInnerRing);
      left: pxToRem(-($userPosMarkerInnerW + $userPosMarkerInnerRing)/ 2);
      top: pxToRem(-($userPosMarkerInnerW + $userPosMarkerInnerRing)/ 2);
      background-color: rgba($colorCyan, 0.99);
      border: $userPosMarkerInnerRing solid $colorWhite;
      border-radius: 50%;
    }
  }

  &__controls {
    position: absolute;
    bottom: pxToRem($sizeTiny);
    right: pxToRem($sizeTiny);
    z-index: 10000;

    button + button {
      margin-top: pxToRem($sizeMini / 2);
    }
  }
}


@each $key, $val in $tl-color-variations {
  .#{$key} {
    .mdl-map_view__marker:after {
      background-image: url(svg-mapmarker($val));  // stylelint-disable-line
    }
  }
}
