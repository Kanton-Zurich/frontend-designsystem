$borderHeightSmall: 2px;
$borderHeightNormal: 5px;

$headerCurves: (
  height: (
    tiny: 48px,
    xsmall: 56px,
    medium: 72px
  ),
  heightWithBorder: (
    tiny: 53px,
    xsmall: 61px,
    medium: 77px
  ),
  borderHeight: (
    tiny: $borderHeightSmall,
    medium: $borderHeightNormal,
  ),
);

.mdl-header {
  @include gridBleed($fullwidth: true);
  @include sizeCurve(padding-bottom, borderHeight, $headerCurves);

  position: relative;

  @include transition(background);

  &--fixed {
    position: fixed;
    top: 0;
    left: 0;

    transition: none;

    z-index: $zIndexFlyouts;
    transform: translateX(0);
    margin-left: 0;
  }

  &--open {
    position: fixed;
    top: 0;

    margin-left: 0;
    transform: none;
    left: 0;

    z-index: $zIndexFlyouts + 1;
  }


  &__wrapper {
    &:after {
      @include sizeCurve(height, borderHeight, $headerCurves);
      background: $colorWhite;

      width: 100vw;
      position: absolute;
      display: block;
      content: ' ';

      @include transition(background);
    }
  }

  &__navigation {
    display: flex;

    @include resetList;

    li {
      margin-right: pxToRem($sizeFontLarge);
    }
  }

  &__nav-item {
    @include sizeCurve(line-height, nav, $lineHeightCurves, $pxToRem: false);
    @include sizeCurve(height, height, $headerCurves);
    @include polyFluidSizing(font-size, map-get($fontSizeCurves, regular));
    @include blankButton();

    display: flex;
    align-items: center;

    color: $colorWhite;

    @include transition(color);

    &--active {
      font-weight: $fontWeightBlack;
    }
  }

  &__search {
    position: absolute;
    right: 0;
    bottom: 0;
    top: 0;

    color: $colorBlack80;
    font-weight: $fontWeightDefault;
    font-size: $sizeFontMedium;

    height: calc(100% - #{$borderHeightSmall});

    background: rgba($colorWhite, 0.4);

    svg use {
      fill: $colorBlack80;
    }

    @include mq($from: medium) {
      height: calc(100% - #{$borderHeightNormal});
    }

    &:hover {
      background: rgba($colorWhite, 0.8);
    }
  }
}

@each $key, $val in $tl-color-variations {
  .#{$key} {
    .mdl-header {
      background: $val;

      &--inverted,
      &.cv-monochrome {
        background: $colorWhite;

        .mdl-header__nav-item {
          color: $colorBlack100;
        }

        .mdl-header__wrapper:after {
          background: $colorBlack;
        }

        .mdl-header__search {
          background: $colorBlack10;
          color: $colorBlack60;
        }
      }
    }
  }
}

/** SPECIAL STYLE FOR HTML-TAG TO ADD PADDING TO COMPENSATE FIXED HEADER */
html.fixed-header {
  @include sizeCurve(padding-top, heightWithBorder, $headerCurves);
}
