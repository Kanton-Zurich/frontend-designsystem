$borderHeightSmall: 2px;
$borderHeightNormal: 5px;
$burgerSubNavHeight: 72px;

$headerCurves: (
  height: (
    tiny: 48px,
    xsmall: 56px,
    medium: 72px
  ),
  borderHeight: (
    tiny: $borderHeightSmall,
    medium: $borderHeightNormal,
  ),
  burgerHeight: (
    tiny: $sizeSmallHuge,
    xsmall: $sizeHuge,
  ),
  searchPadding: (
    tiny: $sizeSmallRegular,
    xsmall: $sizeRegular,
  ),
);

.mdl-header {
  @include gridBleed($fullwidth: true);
  @include sizeCurve(padding-bottom, borderHeight, $headerCurves);

  position: relative;
  z-index: $zIndexFlyouts;

  &--fixed {
    position: fixed;
    top: 0;
    left: 0;
    transition: none;

    transform: translateX(0);
    margin-left: 0;

    z-index: $zIndexFlyouts;
  }

  &--open {
    position: fixed;
    top: 0;

    margin-left: 0;
    transform: none;
    left: 0;

    z-index: $zIndexFlyouts + 1;

    .mdl-header__navigation {
      @include mq($to: small) {
        display: flex;
        padding-top: $sizeRegular;
      }
    }

    .mdl-header__nav-burger {
      svg {
        &.close {
          display: flex;
          width: $sizeRegular;
          height: $sizeRegular;
        }

        &.burger {
          display: none;
        }
      }

      &:after {
        @include sizeCurve(top, burgerHeight, $headerCurves);

        content: ' ';
        background-color: $colorWhite;
        width: 100%;
        height: pxToRem($burgerSubNavHeight);
        position: fixed;
        left: 0;
      }
    }
  }

  &__placeholder {
    width: 200vw;
    margin-left: -100vw;
  }


  &__wrapper {
    &:after {
      @include sizeCurve(height, borderHeight, $headerCurves);
      background: $colorWhite;

      width: 100vw;
      position: absolute;
      display: block;
      content: ' ';

      @include transition(background);
    }
  }

  &__nav-burger {
    @include blankButton;
    @include sizeCurve(height, burgerHeight, $headerCurves);

    display: inline-flex;
    padding: 0 pxToRem($sizeSmallRegular);
    align-items: center;

    svg.close {
      display: none;
    }

    &-text {
      @include polyFluidSizing('font-size', map-get($fontSizeCurves, regular));

      font-family: $fontFamilyBlack;
      color: $colorWhite;
      margin-left: $sizeSmallRegular;

      transform: translateY(3px);
    }

    svg {
      fill: $colorWhite;
    }

    @include mq($from: small) {
      display: none;
    }
  }

  &__navigation {
    display: flex;

    @include resetList;

    li {
      margin-right: pxToRem($sizeFontLarge);
    }

    @include mq($to: small) {
      display: none;
      border-bottom: 1px solid $colorBlack40;
      position: absolute;
      left: 0;
      right: 0;
    }
  }

  &__nav-item {
    @include sizeCurve(line-height, nav, $lineHeightCurves, $pxToRem: false);
    @include sizeCurve(height, height, $headerCurves);
    @include polyFluidSizing(font-size, map-get($fontSizeCurves, regular));
    @include blankButton();

    display: flex;
    align-items: center;

    color: $colorWhite;

    @include mq($to: small) {
      height: $sizeSmallHuge;
    }
    @include transition(color);

    &--active {
      font-family: $fontFamilyBlack;

      @include mq($to: small) {
        border-bottom: 2px solid $colorBlack;
      }
    }
  }

  &__functions {
    position: absolute;
    right: 0;

    @include sizeCurve(bottom, borderHeight, $headerCurves);

    top: 0;
    display: inline-flex;
  }

  &__search {
    color: $colorBlack80;
    font-family: $fontFamilyBase;
    font-size: $sizeFontMedium;

    height: 100%;

    background: rgba($colorWhite, 0.5);

    svg use {
      fill: $colorBlack80;
    }

    &:hover {
      background: rgba($colorWhite, 0.8);
    }
  }

  @include mq($to: medium) {
    .mdl-header__search {
      @include sizeCurve(padding-left padding-right, searchPadding, $headerCurves);

      .atm-button__text {
        display: none;
      }

      .atm-button__text + .atm-button__icon {
        margin-left: 0;
      }
    }
  }
}

.mdl-header--inverted {
  background: $colorWhite;

  .mdl-header__nav-item {
    color: $colorBlack100;
  }

  .mdl-header__wrapper:after {
    background: $colorBlack;
  }

  .mdl-header__functions {
    color: $colorBlack60;

    .icon {
      fill: $colorBlack60;
    }

    .mdl-header__search {
      background-color: $colorBlack10;
    }
  }

  @include mq($to: medium) {
    .mdl-user-menu {
      background: $colorBlack10;
    }
  }
  @include mq($from: medium) {
    .mdl-user-menu {

      &__trigger {
        color: $colorBlack60;

        .icon use {
          fill: $colorBlack60;
        }
      }
    }
  }
}

@each $key, $val in $tl-color-variations {
  .#{$key} {
    .mdl-header__placeholder {
      background: $val;
    }

    .mdl-header {
      background: $val;

      &__wrapper,
      &__functions {
        background: $val;
      }

      &--inverted,
      &.cv-monochrome {
        background: $colorWhite;

        .mdl-header__nav-burger {
          &-text {
            color: $colorBlack;
          }

          svg {
            fill: $colorBlack;
          }
        }

        .mdl-header__nav-item {
          color: $colorBlack100;
        }

        .mdl-header__wrapper:after {
          background: $colorBlack;
        }

        .mdl-header__wrapper,
        .mdl-header__functions {
          background: transparent;
        }

        .mdl-header__functions {
          color: $colorBlack60;

          .icon {
            fill: $colorBlack60;
          }

          .mdl-header__search {
            background: $colorBlack10;
            color: $colorBlack60;
          }
        }
      }
    }
  }
}

//CZHDEV-2671: When Modal opened, reset fixed header zindex
.open-modal .mdl-header--fixed {
  z-index: $zIndexFlyouts + 1;
}
