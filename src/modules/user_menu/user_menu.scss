$userMenuCurves: (
  loginLabel: (
    small: $sizeRegular,
    medium: $sizeSmallLarge,
    large: $sizeSmallLarge,
    xlarge: $sizeLarge,
  ),
  user: (
    tiny: 0,
    xsmall: $sizeSmallRegular,
    small: $sizeSmallRegular,
    medium: $sizeSmallRegular,
    large: $sizeSmallRegular,
    xlarge: $sizeRegular,
  ),
);

.mdl-user-menu {
  // Now:        Hide user menu on logged out state completely.
  // Previously: logged-out state was shown.
  // Default state is logged out.
  //
  // Kept existing styles for logged-out state as shown here:
  // https://www.figma.com/file/d6Pv21UVUbnBs3AdcZijHmbN/KTZH-Design-System?type=design&node-id=11882-6529&mode=dev
  display: none;

  @include sizeCurve(height, height, $headerCurves); // Used variable from header module
  position: relative;

  &__trigger {
    @include blankButton;
    display: inline-flex;
    align-items: center;
    color: $colorBlack;
    padding-left: pxToRem($sizeSmallRegular);

    .icon use {
      fill: $colorBlack;
    }
  }

  &__user-icon-wrapper {
    display: flex;
    justify-content: center;
    align-items: center;
    width: pxToRem($sizeBig);
    height: pxToRem($sizeBig);
    border-radius: 0;

    @include mq($to: small) {
      margin-right: pxToRem($sizeSmallRegular);
    }

    &:before {
      @include mq($to: small) {
        content: '';
        height: pxToRem($sizeBig);
        position: absolute;
        left: 0;
        border-left: 1px solid $colorBlack;
      }
    }
  }

  &__trigger-triangle-icon {
    display: none;
    transition: transform 200ms ease-out;
    transform: rotate(0deg);

    @include sizeCurve(margin-right, user, $userMenuCurves);
  }

  &__username,
  &__loginlabel {
    @include polyFluidSizing(
      font-size,
      map-get($fontSizeCurves, regular)
    ); // Used variable from header module
  }

  &__username {
    display: none;
  }

  &__loginlabel {
    display: none;
    margin-left: pxToRem($sizeTiny);

    @include sizeCurve(margin-right, loginLabel, $userMenuCurves);
    @include mq($from: small) {
      display: block;
    }
  }

  // class added of user is logged in
  &--initialised {
    display: inline-flex; // revert inital 'display: none' of user menu

    .mdl-user-menu {
      &__trigger {
        .mdl-user-menu__user-icon use {
          fill: $colorWhite;
        }
      }

      &__user-icon-wrapper {
        border-radius: pxToRem($sizeBig);
        background-color: $colorBlack;
      }

      &__user-icon {
        width: pxToRem($sizeRegular);
        height: pxToRem($sizeRegular);
      }

      &__trigger-triangle-icon {
        @include mq($from: small) {
          display: block;
        }
      }

      &__username {
        margin-left: pxToRem($sizeTiny);
        margin-right: pxToRem($sizeTiny);

        @include mq($from: large) {
          display: block;
        }
      }

      &__loginlabel {
        display: none;
      }
    }
  }

  &.open {
    border-radius: 2px;
    box-shadow: 0 0 $sizeRegular rgba(0, 0, 0, 0.16), 0 0 2px rgba(0, 0, 0, 0.32);

    .mdl-user-menu {
      color: $colorBlack;
    }

    .mdl-user-menu__trigger-triangle-icon {
      transform: rotate(180deg);
    }

    .mdl-context_menu,
    .mdl-user-menu__user {
      display: block;
    }

    .mdl-user-menu__trigger {
      z-index: 1001;
      background-color: $colorWhite;
      border-radius: 1px;
      color: $colorBlack;
    }
  }

  /**
  * Module overwrites
  */
  .atm-context_menu_item {
    width: 100%;
  }

  .mdl-context_menu {
    @include sizeCurve(top, height, $headerCurves);
    left: 0;
    display: none;
    width: 100%;
  }
}

.cv-inverted {
  .mdl-user-menu__trigger {
    color: $colorWhite;

    .icon use {
      fill: $colorWhite;
    }
  }

  .mdl-user-menu__user-icon-wrapper {
    &:before {
      @include mq($to: small) {
        border-left-color: $colorWhite;
      }
    }
  }

  .mdl-user-menu--initialised {
    .mdl-user-menu__user-icon-wrapper {
      background-color: rgba($colorWhite, 0.7);
    }

    .icon.mdl-user-menu__user-icon use {
      fill: var(--color-accent);
    }
  }
}
