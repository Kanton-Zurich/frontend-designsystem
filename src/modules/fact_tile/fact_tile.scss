$factTilefontSizeCurves: (
  number: (
    xsmall: $sizeFontBiggerBig,
    medium: $sizeFontSmallHuge,
    xlarge: $sizeFontHuge,
  ),
  numberLineHeight: (
    medium: $sizeFontSmallHuge,
    xlarge: $sizeFontHuge,
  ),
  unit: (
    medium: $sizeFontBiggerRegular,
    xlarge: $sizeFontMedium,
  ),
);

.mdl-fact_tile {
  display: grid;
  color: var(--color-text);
  min-width: 0;

  @include mq($from: medium) {
    grid-row: 1 / -1;
    grid-template-rows: subgrid;
  }

  &__title.atm-heading.atm-heading.atm-heading {
    @include polyFluidSizing('font-size', map-get($fontSizeCurves, regular));
    @include sizeCurve('padding-top', regular);
    margin-bottom: pxToRem($sizeTiny);
    line-height: $sizeLineHeightMedium;
    font-family: $fontFamilyBlack;
    color: var(--color-text);
    grid-row-start: 1;
  }

  &__content {
    grid-row-start: 2;
    display: flex;
    flex-direction: row;
    gap: pxToRem($sizeSmallRegular);
    margin-block: pxToRem($sizeTiny);
    padding-block: pxToRem($sizeRegular);
    border-block: 2px dotted var(--color-text);
    min-width: 0;
  }

  &__icon {
    width: pxToRem(88px);
    height: pxToRem(88px);
    background-color: var(--color-text);
    flex-shrink: 0;
  }

  &__indicator {
    margin: 0;
    min-width: 0;
    font-family: $fontFamilyBlack;

    span {
      display: block;
    }
  }

  &__number {
    @include polyFluidSizing('font-size', map-get($factTilefontSizeCurves, number));
    @include polyFluidSizing('line-height', map-get($factTilefontSizeCurves, numberLineHeight));
    min-width: 0;
    overflow-wrap: break-word;
  }

  &__unit {
    @include polyFluidSizing('font-size', map-get($factTilefontSizeCurves, unit));
    min-width: 0;
    overflow-wrap: break-word;
  }

  &__description {
    grid-row-start: 3;

    @include polyFluidSizing('font-size', map-get($fontSizeCurves, smallModFontSizeH5H6));
    color: var(--color-text);
    margin-block-end: 0;
    hyphens: auto;
    overflow-wrap: anywhere;
  }

  .atm-text_link {
    grid-row-start: 4;
    font-size: pxToRem($sizeFontRegular);
    color: var(--color-text);
    margin-block: pxToRem($sizeTiny);
    height: fit-content;
    hyphens: auto;
    overflow-wrap: anywhere;

    .icon {
      fill: var(--color-text);
      flex-shrink: 0;
    }

    &:hover {
      color: var(--color-text-hover);

      .icon {
        fill: var(--color-text-hover);
      }
    }
  }

  &.mdl-fact_tile--stacked {
    .mdl-fact_tile__content {
      flex-direction: column;
      gap: 0;
    }
  }
}
