$colorWhite70: rgba($colorWhite, 0.7);

$accordionMap: (
  controlMargin: (
    zero: 12px,
    small: 14.5px,
    large: 17px,
  ),
  contentMargin: (
    zero: calc(22px - 12px),
    small: calc(25px - 14.5px),
    medium: calc(29px - 14.5px),
    xlarge: calc(36px - 17px),
  ),
);

.mdl-accordion {
  @include sizeCurve(padding-bottom, big);

  .atm-heading--bordered {
    // CZHDEV-428
    @include sizeCurve(margin-bottom, medium);
  }

  &__label {
    display: flex;
    align-items: flex-start;
    position: relative;
    cursor: pointer;

    @include sizeCurve(padding-top padding-bottom, small);
  }

  &__item {
    position: relative;
    overflow: hidden;

    &:after {
      display: block;
      content: ' ';
      left: 0;
      right: 0;
      height: 1px;
      position: absolute;
      bottom: 0;
      transform: scaleY(1);
      background-color: $colorBlack20;

      @include transition(background-color transform);
    }

    .mdl-contact_entry:first-child {
      @include sizeCurve(margin-top, contentMargin, $accordionMap);
    }

    &--open {
      &:after {
        content: none;
      }

      .mdl-accordion__plus .vertical {
        transform: rotate(90deg);
      }

      .mdl-accordion__panel {
        @include transition(max-height);
      }

      .mdl-accordion__subhead {
        opacity: 0;
        padding: 0;
        transition: none;
        visibility: hidden;
      }
    }

    &--transition-end {
      overflow: visible;

      .mdl-accordion__panel {
        overflow: visible;
      }
    }

    @include hover('.mdl-accordion__item--open') {
      &:after {
        transform: scaleY(3);
        background-color: $colorBlack;
      }
    }
  }

  &__header {
    margin: 0;

    @include hover() {
      .mdl-accordion__control,
      .mdl-accordion__title-prefix {
        color: $colorBlack;
      }

      .mdl-accordion__plus use {
        fill: $colorBlack;
      }
    }

    .mdl-accordion__item--open & {
      .mdl-accordion__control,
      .mdl-accordion__title-prefix {
        color: $colorBlack;
      }

      .mdl-accordion__plus use {
        fill: $colorBlack;
      }
    }
  }

  &__button {
    width: 100%;
    text-decoration: none;

    &:not(.mdl-accordion__button--subhead) {
      display: flex;
      justify-content: space-between;
      align-items: start;
    }

    &--subhead {
      &__flexbox {
        display: flex;
        justify-content: space-between;
        align-items: start;
      }
    }
  }

  &__subhead {
    font-size: pxToRem($sizeRegular);
    bottom: pxToRem($sizeMini);
    margin-top: pxToRem(-$sizeRegular);
    line-height: pxToRem($sizeLarge);
    padding-bottom: pxToRem($sizeSmallLarge);
    color: $colorBlack60;
    opacity: 1;
    display: block;
    min-height: pxToRem($sizeRegular);

    @include transition(opacity padding);
  }

  &__control,
  &__title-prefix {
    @include polyFluidSizing(font-size, map-get($fontSizeCurves, regular));
    @include transition(color);
    letter-spacing: -0.3px;
    white-space: nowrap;
    font-family: $fontFamilyBlack;
    line-height: $sizeLineHeightMedium;
    color: $colorBlack60;
  }

  &__title-prefix {
    @include sizeCurve(padding-right, regular);
    @include sizeCurve(margin-top, controlMargin, $accordionMap);
  }

  &__control {
    @include sizeCurve(margin-top margin-bottom, controlMargin, $accordionMap);
    flex-grow: 1;
    white-space: normal;
    word-break: break-word;
    margin: 0;
    display: block;
    hyphens: auto;
  }

  &__plus {
    overflow: hidden;
    margin-right: 2px;
    flex-shrink: 0;

    @include sizeCurve(margin-top margin-bottom margin-left, controlMargin, $accordionMap);

    use {
      fill: $colorBlack60;

      @include transition(fill);
    }

    .vertical {
      transform: rotate(0);
      transform-origin: 50% 50%;

      @include transition(transform);
    }
  }

  &__panel {
    display: none;
    max-height: 0;

    @include transition(max-height, $easing: $transitionEasingDecelerate);
  }

  &__panel-content {
    display: inline-block;
    width: 100%;

    > p:last-child {
      @include sizeCurve(margin-bottom, regular);
    }

    > :last-child {
      @include sizeCurve(margin-bottom, medium);
    }

    .atm-heading.mdl-linklist__title {
      margin-top: 0;
    }

    .aem-Grid .aem-GridColumn:not(:last-child) > .mdl-linklist {
      @include sizeCurve(margin-bottom, medium);
    }
  }

  .mdl-linklist--last,
  .mdl-download_list--last {
    @include sizeCurve(margin-bottom, regular);
  }

  .mdl-linklist--small-margin {
    @include sizeCurve(margin-bottom, regular);
  }

  /** Indented (table of contents/sozial care) variante **/
  &--indented {
    .mdl-accordion__panel-content {
      padding-left: pxToRem(38px);

      .mdl-linklist__title {
        @include sizeCurve(padding-top padding-bottom, small);
        display: flex;
      }

      > :not(.mdl-linklist:last-child) {
        @include sizeCurve(margin-bottom, medium);
      }

      > .mdl-linklist:last-child {
        margin-bottom: pxToRem($sizeHuge);

        @include mq($to: small) {
          margin-bottom: pxToRem($sizeBiggerBig);
        }
      }
    }
  }

  /** Legacy "Inverted" style with light-gray background */
  &--cv-inverted {
    @include gridBleed($fullwidth: true);
    @include sizeCurve(padding-top, big);

    background: $colorBg;
    z-index: 1;

    h2.atm-heading.atm-heading--bordered,
    h2.atm-heading,
    h3.atm-heading,
    h4.atm-heading {
      color: $colorBlack;

      &:before {
        background: $colorBlack;
      }
    }

    h2.atm-heading--bordered {
      margin-top: 0 !important; // stylelint-disable-line
    }

    .mdl-table .atm-text_link {
      color: var(--color-accent);
    }
  }

  /** Contact style */
  &--contact {
    padding-bottom: 0;
    padding-top: 0;

    .mdl-accordion__item {
      &:first-child:before,
      &:after {
        background-color: $colorWhite;
      }

      @include hover('.mdl-accordion__item--open') {
        &:first-child:before,
        &:after {
          background-color: $colorWhite70;
        }
      }
    }

    .mdl-accordion__header {
      .mdl-accordion__control {
        color: $colorWhite;
      }

      .mdl-accordion__plus use {
        fill: $colorWhite;
      }

      @include hover() {
        .mdl-accordion__control {
          color: $colorWhite70;
        }

        .mdl-accordion__plus use {
          fill: $colorWhite70;
        }
      }
    }

    .mdl-accordion__item:first-child:before {
      display: block;
      content: ' ';
      left: 0;
      right: 0;
      height: 1px;
      position: absolute;
      top: 0;
      transform: scaleY(1);
      background-color: $colorWhite;

      @include transition(background-color transform);
    }

    .mdl-accordion__control {
      @include polyFluidSizing('font-size', map-get($fontSizeCurves, medium));
      max-height: none;
    }
  }
}
