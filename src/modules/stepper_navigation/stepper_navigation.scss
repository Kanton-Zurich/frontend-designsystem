$stepperNavigationCurves: (
  ordinalFontSize: (
    tiny: $sizeFontSmallBig,
    large: $sizeFontBiggerBig,
  ),
  checkMarkHeight: (
    tiny: $sizeFontSmallBig * 1.2,
    large: $sizeFontBiggerBig * 1.2,
  ),
  greyline: (
    tiny: $sizeFontSmallBig / 2,
    large: $sizeFontBiggerBig / 2,
  ),
);

@mixin mobileOrdinalStyles {
  .mdl-stepper_navigation__step-title {
    display: none;
  }

  .mdl-stepper_navigation__step--active .mdl-stepper_navigation__step-title {
    display: block;
    position: absolute;
    bottom: 0;
    width: 100%;
    left: 0;
  }
}

.mdl-stepper_navigation {
  list-style-type: none;

  @include sizeCurve(margin-bottom, medium);
  @include resetList;
  display: flex;
  justify-content: space-between;
  position: relative;

  @include mq($to: medium) {
    padding-bottom: pxToRem($sizeRegular * $sizeLineHeightBase);

    @include mobileOrdinalStyles();
  }

  &--tight {
    padding-bottom: pxToRem($sizeRegular * $sizeLineHeightBase);

    @include mobileOrdinalStyles();
  }

  .mdl-stepper--success & {
    display: none;
  }

  &:after {
    position: absolute;
    content: ' ';
    display: block;

    height: 1px;
    width: 100%;

    left: 0;
    background: $colorBlack20;

    @include polyFluidSizing(top, map-get($stepperNavigationCurves, greyline));
    @include mq($to: small) {
      top: 25%;
    }
  }

  &__step {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-start;

    color: $colorBlack60;
    flex-basis: 100%;

    @include transition(color);

    z-index: $zIndexInner;

    &[ disabled ] {
      pointer-events: none;
    }

    &-ordinal {
      @include polyFluidSizing(font-size, map-get($stepperNavigationCurves, ordinalFontSize));

      line-height: $sizeLineHeightNarrow;
      margin-bottom: pxToRem($sizeMini);
      font-family: $fontFamilyBlack;

      background: $colorWhite;

      @include sizeCurve(padding-left padding-right, tiny);
    }

    &-title {
      font-family: $fontFamilyBlack;

      text-align: center;

      @include polyFluidSizing(font-size, map-get($fontSizeCurves, tiny));
    }

    &-dots {
      display: none;
      box-sizing: content-box;

      @include polyFluidSizing(height, map-get($stepperNavigationCurves, checkMarkHeight));
      @include sizeCurve(padding-left padding-right, tiny);

      background: $colorWhite;
      padding-bottom: $sizeMini;
      transform: translateY(-3px);

      @include mq($to: small) {
        height: 2rem;
      }
    }


    &-checkmark {
      width: 4rem;

      @include polyFluidSizing(height, map-get($stepperNavigationCurves, checkMarkHeight));

      display: none;

      margin-bottom: pxToRem($sizeMini);

      background: $colorWhite;

      use {
        fill: $colorBlue;
      }

      @include mq($to: small) {
        width: 2rem;
        height: 2rem;
      }
    }

    // INTERACTION STYLES */
    &:hover {
      color: $colorBlack;

      use {
        fill: $colorBlack;
      }
    }

    &--visited {
      .mdl-stepper_navigation__step-ordinal {
        display: none;
      }

      .mdl-stepper_navigation__step-checkmark {
        display: block;
      }
    }

    &--active {
      color: $colorBlue;

      .mdl-stepper_navigation__step-title {
        color: $colorBlack;
        font-family: $fontFamilyBlack;
      }

      .mdl-stepper_navigation__step-ordinal {
        display: block;
      }

      .mdl-stepper_navigation__step-checkmark {
        display: none;
      }
    }

    &--pending,
    &--multiple {

      .mdl-stepper_navigation__step-dots {
        display: block;
      }

      .mdl-stepper_navigation__step-ordinal {
        display: none;
      }

      .mdl-stepper_navigation__step-checkmark {
        display: none;
      }


      .mdl-stepper_navigation__step-title {
        visibility: hidden;
      }
    }

    &--multiple {
      position: relative;
      z-index: $zIndexOverlays;

      &[ data-stepper_navigation='multipleBefore' ] {
        svg use {
          fill: $colorCyan;
        }
      }
    }

    &--pending {
      align-items: flex-end;

      ~ li {
        display: none !important; //stylelint-disable-line
      }
    }

    &--hidden {
      display: none;
    }

    ~ .mdl-context_menu {
      display: none;
    }
  }

  li:last-child {
    justify-content: flex-end;

    .mdl-stepper_navigation__step {
      align-items: flex-end;

      .mdl-stepper_navigation__step-ordinal {
        padding-right: 0;
      }
    }
  }

  > li:first-child {
    justify-content: flex-start;

    .mdl-stepper_navigation__step {
      align-items: flex-start;

      .mdl-stepper_navigation__step-ordinal {
        padding-left: 0;
      }
    }
  }

  > li {
    display: flex;
    align-items: stretch;

    flex: 1 1 100%;
    width: 0;

    justify-content: center;

    &.mdl-stepper_navigation__step--pending,
    &.mdl-stepper_navigation__step--align-right {
      justify-content: flex-end;
    }

    &.mdl-stepper_navigation__step--hidden {
      display: none;
    }
  }
}
